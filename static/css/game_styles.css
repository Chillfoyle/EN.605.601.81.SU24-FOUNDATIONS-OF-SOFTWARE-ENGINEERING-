/* Colors */

:root {
    --game-green: #14fa46;
    --game-yellow: #ffe72e;
    --game-red: #ff2929;
    --game-blue: #244cff;
    --header-blue: #0c3973;
    --background-blue: #e0e3f0;
    --hover-blue: #016af4;
    --die-color: #1c0c73;
}

.red { background-color: var(--game-red); }
.green { background-color: var(--game-green); }
.blue { background-color: var(--game-blue); }
.yellow { background-color: var(--game-yellow); }
.white { background-color: white; }

/* Screen Components */

body, html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
    overflow: hidden;
    background-color: var(--background-blue);
}

/* Header Styles: Toggle instructions button, page title, Main Menu button */

.header {
    display: flex;
    justify-content: space-between; /* Spreads out items in the header */
    align-items: center;
    color: white;
    width: 100%; /* Stretch across the whole screen */
    position: fixed; /* Keep it on top */
    top: 0;
    z-index: 2000; /* Ensures it's on top of everything */
    height: 50px;
    background-color: var(--header-blue);
    border-bottom: 2px solid black;
}

.header-button-container {
    display: flex;
    gap: 10px;
    height: 100%
}

.header-button {
    display: flex;
    align-items: center; /* Centers text vertically */
    justify-content: center; /* Centers text horizontally */
    padding: 0px 10px;
    font-weight: bold;
    font-size: 20px;
    height: 50px;
    justify-content: center;
    cursor: pointer;
    text-decoration: none;
    background-color: white;
    color: var(--header-blue);
    border-left: 2px solid black;
    border-right: 2px solid black;
    border-bottom: none;
    transition: background-color 0.3s;
}

.header-button:hover {
    background-color: var(--hover-blue);
    color: white;
}

.title {
    margin-left: 20px;
    font-size: 2em;
    color: white;
    text-decoration: none;
}

/* Instructions Styles */

.instructions-container {
    position: fixed;
    top: -100%; /* Hide off-screen */
    left: 0;
    width: 100%;
    height: 100%; /* Or adjust as needed */
    background-color: white; /* Adjust for readability */
    z-index: 1000; /* Make sure it covers other content */
    transition: top 0.5s ease; /* Smooth sliding */
    overflow-y: auto;
    padding: 20px;
}

.instructions-visible {
    top: 50px; /* Slide down to cover the screen */
}

/* Main Styles */

.main-container {  /* Everything below header */
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    gap: 10px;
    margin-top: 50px;
}

/* Game Board */

.game-container { /* Holds game board and score windows */
    display: flex;
    width: auto;
    height: auto;
    justify-content: center;
    align-items: center;
}

.game-board {  /* The part of the game container with the game board */
    width: auto;
    height: calc(100vh - 100px);
    display: grid;
    grid-template-columns: repeat(9, 1fr); /* 9 columns */
    grid-template-rows: repeat(9, 1fr); /* 9 rows */
    border: 2px solid black;
    aspect-ratio: 1 / 1;
    padding: 0;
    margin-left: 20px;
    margin-top: 20px;
    box-sizing: border-box;
}

.square {  /* Game board square */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    font-size: 14px;
    font-weight: bold;
    border: 1px solid black;
}

.square-empty {  /* Game board empty spaces */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    font-weight: bold;
    background-color: var(--background-blue);
}

/* Score Window Styles */

.window {
    position: absolute;
    width: 10%;
    height: 24%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#red-window {
    top: 22%;
    left: 6%;
    border: 5px solid var(--game-red);
}

#yellow-window {
    top: 22%;
    left: 22.5%;
    border: 5px solid var(--game-yellow);
}

#green-window {
    bottom: 15%;
    left: 6%;
    border: 5px solid var(--game-green);
}

#blue-window {
    bottom: 15%;
    left: 22.5%;
    border: 5px solid var(--game-blue);
}

.player-name {  /* Name that goes above the score window */
    font-size: 1.5vw;
    margin-bottom: 10px;
    border: none !important;
}

.score-grid {  /* The 2x2 grid for the player's score */
    display: grid;
    grid-template-columns: repeat(2, 1fr); /* 2 columns */
    grid-template-rows: repeat(2, 1fr);    /* 2 rows */
    width: 70px;
    height: 70px;
    padding: 10px;
    border: transparent !important;
}

.score-square {  /* One square in the 2x2 grid */
    background-color: #FFF; /* Default color */
    border: 2px solid black !important; /* So the borders don't look weird */
    width: 100%;
    height: 100%;
    transition: background-color 0.3s;
}

#window1:hover>.score-square { /* So the borders don't look weird */
  border-color: transparent;
}

/* Token Styles */

/* TODO: Maybe add a shadow or something... */
.token {
    position: absolute;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 2px solid black;
    transition: transform 2s ease; /* Smooth animation */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
}

@keyframes hop {
    0% {
        transform: scale(1);

        /*box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4); /* Normal shadow */
    }
    50% {
        transform: scale(1.2); /* Grow at the midpoint */
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.6); /* Optional shadow for depth */
    }
    100% {
        transform: translate(var(--translate-x), var(--translate-y)) scale(1);
       /* box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4); /* Return to normal shadow */
    }
}

.hopping {
  animation: hop 2s ease; /* Adjust timing to match movement */
}

/* Token locations within the grid squares */

.red-corner {
    top: 0;
    left: 0;
}
.yellow-corner {
    top: 0;
    right: 0;
}
.green-corner {
    bottom: 0;
    left: 0;
}
.blue-corner {
    bottom: 0;
    right: 0;
}

/* Everything Else */

.gameplay-container { /* Holds everything in the game screen except board*/
    width: 80%;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 20px;
    padding: 0px 20px;
}

.question-container {  /* Top part of gameplay container displaying questions and buttons */
    width: auto;
    height: 60%;
    display: flex;
    flex-direction: row;
    gap: 10px;
    align-items: center;
    justify-content: space-between;
    margin: 0;
    padding-left: 0px;
    padding-right: 0px;
}

.answer-button-container {  /* Part of question-container with buttons for trivia question */
    width: 50%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 20px;
    font-size: 40px;
    margin-top: 30px;
    margin-left: 20px;
    margin-bottom: 10px;
}

.category-container {  /* Part of question-container with buttons for trivia question */
    width: 50%;
    height: 100%;
    margin-top: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
}

.player-prompt-container { /* Bottom part of gameplay container with turn order and prompts */
    width: auto;
    height: 40%;
    display: flex;
    flex-direction: row;
    position: relative;
    overflow: hidden;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    margin-top: 0px;
    gap: 20px;
}

.die-container {  /* Container for die and roll button */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 10px;
    width: 40%;
}

#lambda-container { /* Holds die, prompts, and Lambda character */
    width: 80;
    height: 40%;
    display: flex;
    flex-direction: row;
    position: relative; 
    overflow: hidden;
    justify-content: space-between;
    background-color: white;
    border: 2px solid black;
    padding: 5px;
    margin-top: 10px;
}

.player-prompt-text {  /* The text telling the player what to do */
    display: flex;
    justify-content: center;
    align-items: center;
    width: 280px;
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 10px;
    text-align: center;
    flex-direction: column;
}

#ok-button {
    display: block; /* Ensure the button is on its own line */

}

.text-window {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 40%;
}

.lambda { /* Lambda character */
    background-image: url('../images/lambda-happy.png');
    background-size: cover;
    margin: 0 0; /* Center the image horizontally */
    margin-bottom: 10px;
    width: 240px; /* Adjust the width as needed */
    height: 170px; /* Maintain aspect ratio */
    position: relative; /* or 'relative' depending on the layout */
    right: 0%; /* or adjust as needed */
    bottom: 20%; /* or adjust as needed */
    animation: slideIn 1s ease-out; /* Apply the animation */
    opacity: 1; /* Ensure the opacity starts at 0 */
}

/* Table Styles */

.category-table {
    width: 50%;
    border-collapse: collapse;
    margin-top: 20px;
    background-color: white;
}

.player-table {
    width: 30%;
    border-collapse: collapse;
    margin-top: 20px;
    background-color: white;
}

.category-table th, .player-table th,
.category-table td, .player-table td {
    border: 1px solid black;
    padding: 8px;
    text-align: center;
    font-size: 18px;
}

.category-table th, .player-table th {
    font-weight: bold;
    background-color: var(--header-blue);
    color: white;
}

.color-cell {
    width: 150px; /* Adjust width as needed */
    text-align: center;
    font-weight: bold; /* Bold font for the first column */
    color: black;
}

.red-row {
    background-color: var(--game-red) !important;
}

.yellow-row {
    background-color: var(--game-yellow) !important;
}

.green-row {
    background-color: var(--game-green) !important;
}

.blue-row {
    background-color: var(--game-blue) !important;
}

/* Player Action Styles */

.die {  /* The die */
    position: relative;
    width: 80px;
    height: 80px;
    border: 2px solid black;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    margin-top: 0px;
    margin-bottom: 20px;
    transform-style: preserve-3d;
    transform: rotateX(0deg) rotateY(0deg);
    transition: transform 0.6s ease;
    background-color: var(--die-color);
}

.spin {
    /* Add this class when you want to spin the die */
    animation: spin 0.6s forwards;
}

@keyframes spin {
    from {
        transform: rotateY(0deg);
    }
    to {
        transform: rotateY(360deg);
    }
}

.face {
    position: absolute;
    width: 80px;
    height: 80px;
    background: var(--die-color);
    border: 2px solid black;
    border-radius: 10px;
    font-size: 30px;
    text-align: center;
    display: flex;
    align-items: center;
    line-height: 100px;
    font-weight: bold;
    color: white;
    justify-content: center;
}

.front  { transform: rotateY(  0deg) translateZ(50px); }
.back   { transform: rotateY(180deg) translateZ(50px); }
.left   { transform: rotateY(-90deg) translateZ(50px); }
.right  { transform: rotateY( 90deg) translateZ(50px); }
.top    { transform: rotateX( 90deg) translateZ(50px); }
.bottom { transform: rotateX(-90deg) translateZ(50px); }

.button {  /* Roll Die button, but also all other buttons */
    background-color: var(--game-red);
    border: none;
    color: white;
    font-size: 20px;
    padding: 10px 15px;
    border: 2px solid black;
    cursor: pointer;
    margin-bottom: 10px;
}

.button:hover {
    background-color: var(--hover-blue);
    color: white;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Shadow effect */
    transform: scale(1.1); /* Slightly grow the button */
}

.button:disabled {
  /* Styles for disabled button */
  opacity: 0.5; /* Adjust opacity as needed */
  cursor: not-allowed;
  background-color: #6c757d; /* Optional: change background color for disabled state */
}

.button:disabled:hover {
  transform: none;
  box-shadow: none;
}

/* Button-like interactivity */
.category-button {
    width: 150px;
    border: none;
    color: black;
    font-size: 20px;
    padding: 10px 15px;
    border: 2px solid black;
    cursor: pointer;
    margin-bottom: 10px;
    transition: background-color 0.3s, transform 0.2s;
}

/* Make it look less like traditional buttons */
.button:active:not(.disabled), .category-button:active:not(.disabled) {
    transform: scale(0.95); /* Give a pressed effect */
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.2); /* Inner shadow */
}

/* Hover effect for enabled buttons */
.button:hover:not(:disabled), .category-button:hover:not(:disabled) {
    transform: scale(1.1); /* Slightly larger on hover */
    /* Add hover background color change if needed */
}

/* Disable hover effects and interactivity for disabled buttons */
.button:disabled, .category-button:disabled {
    cursor: not-allowed;
    transform: none;
    opacity: 0.4; /* Make the button look disabled */
    /* Remove active state styles */
    box-shadow: none;
}

/* Remove hover effect for disabled buttons */
.button:disabled:hover , .category-button:disabled:hover {
    transform: none;
    cursor: not-allowed;
}

/* Remove active state effects for disabled buttons */
.button:disabled:hover, .category-button:disabled:active {
    transform: none;
    box-shadow: none;
    cursor: not-allowed;
}



/* Miscellaneous Styles */

.star {  /* The stars that show the player where to move */
    position: absolute;
    width: 50px;
    height: 50px;
    background-image: url('../images/star.png');
    background-size: cover;
    cursor: pointer;
    z-index: 100;
}

/* Card Styles */

.card-container {
    position: relative;
    width: 375px; /* Adjust as needed */
    height: 225px; /* Adjust as needed */
    margin-top: 20px;
    perspective: 1000px; /* Gives a 3D effect */
}

.card {
    float: left;
    position: relative;
    width: 375px; /* Adjust as needed */
    height: 215px; /* Adjust as needed */
    border-radius: 15px;
    margin-top: 10px;
    overflow: hidden;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.4), 0 6px 6px rgba(0, 0, 0, 0.2); /* Box shadow for depth */
    perspective: 1000px; /* Gives a 3D effect */
}

.decorative-card {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: transform 0.6s ease; /* For sliding up/down */
    z-index: 2; /* Place it on top */
    background: black;
    background-image: url('../images/game-card-logo.png');
    background-size: 175px 175px;
    background-position: center;
    background-repeat: no-repeat;
    border-radius: 13px;
}

.card-border, .content-card-border {
    position: absolute;
    top: 10px; /* Adjust this value to control the inset gap */
    left: 10px; /* Adjust this value to control the inset gap */
    right: 10px; /* Adjust this value to control the inset gap */
    bottom: 10px; /* Adjust this value to control the inset gap */
    border: 2px solid white; /* Set the border thickness and color */
    border-radius: 13px; /* To match the card's border-radius minus the gap */
    box-sizing: border-box; /* Ensure the border is included in the width/height */
    z-index: 2; /* Ensure the border is above the card background */
    background: none; /* To ensure only the border shows */
}

.card-content {
    position: relative;
    padding: 20px; /* Optional: Add padding inside the border */
    text-align: center; /* Center the content inside the card */
    z-index: 3; /* Ensure the content is above the border */
    /*background: white; /* Background color of content, adjust if needed */
    /*border-radius: 10px; /* Optional: match or slightly reduce the card-border radius */
    font-size: 24px;
    color: black;
}

.content-card {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s; /* Duration of the flip */
    transform-style: preserve-3d; /* Ensures 3D effects are applied */
}

.card-front, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden; /* Hides the back of the card when facing away */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1; /* Ensure these are behind the border and content */
}

.card-back {
    background-color: white; /* Back card color */
    border: 2px solid #ccc; /* Optional border */
    transform: rotateY(180deg);
    border-radius: 13px;
}

.card-front {
    background-color: white; /* Back card color */
    border: 2px solid #ccc; /* Optional border */
    border-radius: 13px;
}

/*.card:hover .content-card {*/
 /*   transform: rotateX(180deg); /* Flips the card on hover */
/*}*/

.content-card.flipped {
    transform: rotateY(180deg);
}

.decorative-card.slide-up {
    transform: translateY(-150%);
}

.decorative-card.slide-down {
    transform: translateY(0%);
}

/* Keyframe animations and transition effects */
@keyframes slideIn {
    0% {
        transform: translateX(140vw); /* Start off-screen to the right */
        opacity: 0; /* Ensure it's invisible initially */
    }
    100% {
        transform: translateX(0); /* End at the final position */
        opacity: 1; /* Ensure it’s fully visible */
    }
}

.popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
    display: none; /* Hidden by default */
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure it appears above other content */
}

.popup-content {
    background-color: white;
    padding: 20px;
    border-radius: 5px;
    text-align: center;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
}

.popup-content p {
    margin-bottom: 20px;
    font-size: 20px;
}

.popup-button-container {
    display: flex;
    flex-direction: row;
    gap: 20px;
    align-items: center;
    justify-content: center;
    font: 20px;
}

